{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Safe.sol"
  },
  "ast": {
    "absolutePath": "contracts/Safe.sol",
    "exportedSymbols": {
      "Safevictim": [
        112
      ]
    },
    "id": 113,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Safevictim",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 112,
        "linearizedBaseContracts": [
          112
        ],
        "name": "Safevictim",
        "nameLocation": "65:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 7,
            "name": "deposited",
            "nameLocation": "88:9:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "106:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "98:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "98:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "121:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "113:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "97:32:0"
            },
            "src": "82:48:0"
          },
          {
            "anonymous": false,
            "id": 13,
            "name": "withdrawed",
            "nameLocation": "141:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "160:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "152:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "175:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "167:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "151:32:0"
            },
            "src": "135:49:0"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "reentrancyGuard",
            "nameLocation": "204:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "190:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 14,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "190:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0103c92b",
            "id": 19,
            "mutability": "mutable",
            "name": "userBalance",
            "nameLocation": "260:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 112,
            "src": "225:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "233:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "225:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "244:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "302:136:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "320:16:0",
                        "subExpression": {
                          "id": 22,
                          "name": "reentrancyGuard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "321:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2072652d656e7472616e6379",
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "338:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        },
                        "value": "No re-entrancy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7109d055747128b1845253a541e68e79b746fd395390f66cafa3d072fc0d40",
                          "typeString": "literal_string \"No re-entrancy\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "312:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "312:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "312:43:0"
                },
                {
                  "expression": {
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "reentrancyGuard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "365:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "383:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "365:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "365:22:0"
                },
                {
                  "id": 31,
                  "nodeType": "PlaceholderStatement",
                  "src": "397:1:0"
                },
                {
                  "expression": {
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32,
                      "name": "reentrancyGuard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "408:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "426:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "408:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "408:23:0"
                }
              ]
            },
            "id": 37,
            "name": "noReentrancy",
            "nameLocation": "287:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:0"
            },
            "src": "278:160:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "480:132:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "498:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "498:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "510:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "498:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "490:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "490:22:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "522:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 50,
                      "indexExpression": {
                        "expression": {
                          "id": 48,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "534:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "534:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "522:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "549:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "549:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "522:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "522:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 56,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "583:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 58,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "595:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "595:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 55,
                      "name": "deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "573:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "573:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "EmitStatement",
                  "src": "568:37:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "453:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "460:2:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:0:0"
            },
            "scope": 112,
            "src": "444:168:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "647:280:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 67,
                            "name": "userBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "665:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 70,
                          "indexExpression": {
                            "expression": {
                              "id": 68,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "677:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "677:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "665:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "691:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "665:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "657:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "657:36:0"
                },
                {
                  "assignments": [
                    76
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 76,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "711:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "703:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "703:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "baseExpression": {
                      "id": 77,
                      "name": "userBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "720:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "expression": {
                        "id": 78,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "732:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "732:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "720:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "703:40:0"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 82,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "753:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 85,
                      "indexExpression": {
                        "expression": {
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "765:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "765:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "753:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "779:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "753:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "753:27:0"
                },
                {
                  "assignments": [
                    90,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "797:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 110,
                      "src": "792:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "792:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 98,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "838:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 91,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "807:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "807:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "807:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 94,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 76,
                          "src": "830:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "807:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "807:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "791:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "859:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c65642e",
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "865:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2350d055b7387361ef85d5ee24239eccd0e54f467458852b2350866f996b89bf",
                          "typeString": "literal_string \"Failed.\""
                        },
                        "value": "Failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2350d055b7387361ef85d5ee24239eccd0e54f467458852b2350866f996b89bf",
                          "typeString": "literal_string \"Failed.\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "851:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "851:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "901:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "901:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 107,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "913:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 104,
                      "name": "withdrawed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "890:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "890:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "EmitStatement",
                  "src": "885:35:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "627:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:2:0"
            },
            "returnParameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:0"
            },
            "scope": 112,
            "src": "618:309:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 113,
        "src": "56:873:0",
        "usedErrors": []
      }
    ],
    "src": "31:899:0"
  },
  "bytecode": "608060405234801561001057600080fd5b5061027d806100206000396000f3fe6080604052600436106100345760003560e01c80630103c92b146100395780633ccfd60b14610078578063d0e30db01461008f575b600080fd5b34801561004557600080fd5b506100666100543660046101f1565b60016020526000908152604090205481565b60405190815260200160405180910390f35b34801561008457600080fd5b5061008d610097565b005b61008d610186565b336000908152600160205260409020546100b057600080fd5b33600081815260016020526040808220805490839055905190929083908381818185875af1925050503d8060008114610105576040519150601f19603f3d011682016040523d82523d6000602084013e61010a565b606091505b50509050806101495760405162461bcd60e51b81526020600482015260076024820152662330b4b632b21760c91b604482015260640160405180910390fd5b60408051338152602081018490527f93617e8c39b86ab5622f0c8bf0da4cf11f50ec322428cbc01b52f9ac1589d2b9910160405180910390a15050565b6000341161019357600080fd5b33600090815260016020526040812080543492906101b2908490610221565b9091555050604080513381523460208201527f688e89c1496876b0d792df75671fbe827183660b170bb8983d82511a6a4b7d1b910160405180910390a1565b60006020828403121561020357600080fd5b81356001600160a01b038116811461021a57600080fd5b9392505050565b6000821982111561024257634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212205ed3ce9e49c994937450f541ddf28412afa74d4a121e3e2e53b3e6969bc80cc664736f6c634300080a0033",
  "bytecodeSha1": "905a49d5fce63fb42fd43d5cf6cb63bae4b84b43",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "Safevictim",
  "coverageMap": {
    "branches": {
      "0": {
        "Safevictim.deposit": {
          "8": [
            498,
            511,
            true
          ]
        },
        "Safevictim.withdraw": {
          "7": [
            859,
            863,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Safevictim.deposit": {
          "4": [
            490,
            512
          ],
          "5": [
            522,
            558
          ],
          "6": [
            568,
            605
          ]
        },
        "Safevictim.withdraw": {
          "0": [
            657,
            693
          ],
          "1": [
            753,
            780
          ],
          "2": [
            851,
            875
          ],
          "3": [
            885,
            920
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100345760003560e01c80630103c92b146100395780633ccfd60b14610078578063d0e30db01461008f575b600080fd5b34801561004557600080fd5b506100666100543660046101f1565b60016020526000908152604090205481565b60405190815260200160405180910390f35b34801561008457600080fd5b5061008d610097565b005b61008d610186565b336000908152600160205260409020546100b057600080fd5b33600081815260016020526040808220805490839055905190929083908381818185875af1925050503d8060008114610105576040519150601f19603f3d011682016040523d82523d6000602084013e61010a565b606091505b50509050806101495760405162461bcd60e51b81526020600482015260076024820152662330b4b632b21760c91b604482015260640160405180910390fd5b60408051338152602081018490527f93617e8c39b86ab5622f0c8bf0da4cf11f50ec322428cbc01b52f9ac1589d2b9910160405180910390a15050565b6000341161019357600080fd5b33600090815260016020526040812080543492906101b2908490610221565b9091555050604080513381523460208201527f688e89c1496876b0d792df75671fbe827183660b170bb8983d82511a6a4b7d1b910160405180910390a1565b60006020828403121561020357600080fd5b81356001600160a01b038116811461021a57600080fd5b9392505050565b6000821982111561024257634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212205ed3ce9e49c994937450f541ddf28412afa74d4a121e3e2e53b3e6969bc80cc664736f6c634300080a0033",
  "deployedSourceMap": "56:873:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;225:46;;;;;;;;;;-1:-1:-1;225:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;451:25:2;;;439:2;424:18;225:46:0;;;;;;;618:309;;;;;;;;;;;;;:::i;:::-;;444:168;;;:::i;618:309::-;677:10;691:1;665:23;;;:11;:23;;;;;;657:36;;;;;;732:10;703:14;720:23;;;:11;:23;;;;;;;;753:27;;;;807:34;;720:23;;732:10;720:23;;703:14;807:34;703:14;807:34;720:23;732:10;807:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;791:50;;;859:4;851:24;;;;-1:-1:-1;;;851:24:0;;899:2:2;851:24:0;;;881:21:2;938:1;918:18;;;911:29;-1:-1:-1;;;956:18:2;;;949:37;1003:18;;851:24:0;;;;;;;;890:30;;;901:10;1206:51:2;;1288:2;1273:18;;1266:34;;;890:30:0;;1179:18:2;890:30:0;;;;;;;647:280;;618:309::o;444:168::-;510:1;498:9;:13;490:22;;;;;;534:10;522:23;;;;:11;:23;;;;;:36;;549:9;;522:23;:36;;549:9;;522:36;:::i;:::-;;;;-1:-1:-1;;573:32:0;;;583:10;1206:51:2;;595:9:0;1288:2:2;1273:18;;1266:34;573:32:0;;1179:18:2;573:32:0;;;;;;;444:168::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;1311:225::-;1351:3;1382:1;1378:6;1375:1;1372:13;1369:136;;;1427:10;1422:3;1418:20;1415:1;1408:31;1462:4;1459:1;1452:15;1490:4;1487:1;1480:15;1369:136;-1:-1:-1;1521:9:2;;1311:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    56,
    929
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x103C92B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D PUSH2 0x97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH2 0x186 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x2330B4B632B217 PUSH1 0xC9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x93617E8C39B86AB5622F0C8BF0DA4CF11F50EC322428CBC01B52F9AC1589D2B9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1B2 SWAP1 DUP5 SWAP1 PUSH2 0x221 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x688E89C1496876B0D792DF75671FBE827183660B170BB8983D82511A6A4B7D1B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x242 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xD3 0xCE SWAP15 0x49 0xC9 SWAP5 SWAP4 PUSH21 0x50F541DDF28412AFA74D4A121E3E2E53B3E6969BC8 0xC 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        56,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x103C92B"
    },
    "25": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3CCFD60B"
    },
    "36": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78"
    },
    "40": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0E30DB0"
    },
    "47": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F"
    },
    "51": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        56,
        929
      ],
      "op": "REVERT",
      "path": "0"
    },
    "57": {
      "offset": [
        225,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "58": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "60": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45"
    },
    "64": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "67": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "68": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "REVERT",
      "path": "0"
    },
    "69": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "offset": [
        225,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "74": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54"
    },
    "77": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "80": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "83": {
      "fn": null,
      "jump": "i",
      "offset": [
        225,
        271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "84": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "87": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "89": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "92": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "95": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "97": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "JUMP",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "105": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "106": {
      "op": "SWAP1"
    },
    "107": {
      "op": "DUP2"
    },
    "108": {
      "op": "MSTORE"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "offset": [
        225,
        271
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "114": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "117": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "SUB",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        225,
        271
      ],
      "op": "RETURN",
      "path": "0"
    },
    "120": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "121": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "122": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "123": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "124": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "127": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "128": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "130": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "DUP1",
      "path": "0"
    },
    "131": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "REVERT",
      "path": "0"
    },
    "132": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "POP",
      "path": "0"
    },
    "134": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D"
    },
    "137": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "140": {
      "fn": "Safevictim.withdraw",
      "jump": "i",
      "offset": [
        618,
        927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "141": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "142": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "STOP",
      "path": "0"
    },
    "143": {
      "fn": "Safevictim.deposit",
      "offset": [
        444,
        612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "144": {
      "fn": "Safevictim.deposit",
      "offset": [
        444,
        612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D"
    },
    "147": {
      "fn": "Safevictim.deposit",
      "offset": [
        444,
        612
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "150": {
      "fn": "Safevictim.deposit",
      "jump": "i",
      "offset": [
        444,
        612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": "Safevictim.withdraw",
      "offset": [
        618,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "Safevictim.withdraw",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "153": {
      "fn": "Safevictim.withdraw",
      "offset": [
        691,
        692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "155": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "156": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "157": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "158": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "160": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "162": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "163": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "165": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "166": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "167": {
      "fn": "Safevictim.withdraw",
      "offset": [
        665,
        688
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "168": {
      "fn": "Safevictim.withdraw",
      "offset": [
        657,
        693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB0"
    },
    "171": {
      "fn": "Safevictim.withdraw",
      "offset": [
        657,
        693
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": "Safevictim.withdraw",
      "offset": [
        657,
        693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "174": {
      "fn": "Safevictim.withdraw",
      "offset": [
        657,
        693
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": "Safevictim.withdraw",
      "offset": [
        657,
        693
      ],
      "op": "REVERT",
      "path": "0"
    },
    "176": {
      "fn": "Safevictim.withdraw",
      "offset": [
        657,
        693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "177": {
      "fn": "Safevictim.withdraw",
      "offset": [
        732,
        742
      ],
      "op": "CALLER",
      "path": "0"
    },
    "178": {
      "fn": "Safevictim.withdraw",
      "offset": [
        703,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "180": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "181": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "182": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "183": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "185": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "187": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "188": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "190": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "191": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "192": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "193": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "194": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "195": {
      "fn": "Safevictim.withdraw",
      "offset": [
        753,
        780
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 1
    },
    "196": {
      "fn": "Safevictim.withdraw",
      "offset": [
        753,
        780
      ],
      "op": "DUP4",
      "path": "0"
    },
    "197": {
      "fn": "Safevictim.withdraw",
      "offset": [
        753,
        780
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "198": {
      "fn": "Safevictim.withdraw",
      "offset": [
        753,
        780
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "199": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "200": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "201": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "202": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "203": {
      "fn": "Safevictim.withdraw",
      "offset": [
        732,
        742
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "204": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "205": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "206": {
      "fn": "Safevictim.withdraw",
      "offset": [
        703,
        717
      ],
      "op": "DUP4",
      "path": "0"
    },
    "207": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "208": {
      "fn": "Safevictim.withdraw",
      "offset": [
        703,
        717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "209": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "210": {
      "fn": "Safevictim.withdraw",
      "offset": [
        720,
        743
      ],
      "op": "DUP6",
      "path": "0"
    },
    "211": {
      "fn": "Safevictim.withdraw",
      "offset": [
        732,
        742
      ],
      "op": "DUP8",
      "path": "0"
    },
    "212": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "GAS",
      "path": "0"
    },
    "213": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "CALL",
      "path": "0"
    },
    "214": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "215": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "216": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "217": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "218": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "219": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP1",
      "path": "0"
    },
    "220": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "222": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP2",
      "path": "0"
    },
    "223": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "EQ",
      "path": "0"
    },
    "224": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105"
    },
    "227": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "228": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "230": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "231": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "232": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "233": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "235": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "NOT",
      "path": "0"
    },
    "236": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "238": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "239": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "ADD",
      "path": "0"
    },
    "240": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "AND",
      "path": "0"
    },
    "241": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP3",
      "path": "0"
    },
    "242": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "ADD",
      "path": "0"
    },
    "243": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "245": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "246": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "247": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP3",
      "path": "0"
    },
    "248": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "249": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "250": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "252": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "254": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "DUP5",
      "path": "0"
    },
    "255": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "ADD",
      "path": "0"
    },
    "256": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "257": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "260": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "JUMP",
      "path": "0"
    },
    "261": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "262": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "264": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "265": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "266": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "267": {
      "fn": "Safevictim.withdraw",
      "offset": [
        807,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "268": {
      "fn": "Safevictim.withdraw",
      "offset": [
        791,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "269": {
      "fn": "Safevictim.withdraw",
      "offset": [
        791,
        841
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "Safevictim.withdraw",
      "offset": [
        791,
        841
      ],
      "op": "POP",
      "path": "0"
    },
    "271": {
      "branch": 7,
      "fn": "Safevictim.withdraw",
      "offset": [
        859,
        863
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 2
    },
    "272": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149"
    },
    "275": {
      "branch": 7,
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "276": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "278": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "285": {
      "op": "SHL"
    },
    "286": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "287": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "290": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "292": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "DUP3",
      "path": "0"
    },
    "293": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "ADD",
      "path": "0"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "299": {
      "op": "DUP3"
    },
    "300": {
      "op": "ADD"
    },
    "301": {
      "op": "MSTORE"
    },
    "302": {
      "op": "PUSH7",
      "value": "0x2330B4B632B217"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "315": {
      "op": "DUP3"
    },
    "316": {
      "op": "ADD"
    },
    "317": {
      "op": "MSTORE"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "320": {
      "op": "ADD"
    },
    "321": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "323": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "324": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "325": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "326": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "SUB",
      "path": "0"
    },
    "327": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "328": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "329": {
      "fn": "Safevictim.withdraw",
      "offset": [
        851,
        875
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "330": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "332": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "333": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "334": {
      "fn": "Safevictim.withdraw",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "0"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "339": {
      "op": "DUP2"
    },
    "340": {
      "op": "ADD"
    },
    "341": {
      "op": "DUP5"
    },
    "342": {
      "op": "SWAP1"
    },
    "343": {
      "op": "MSTORE"
    },
    "344": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x93617E8C39B86AB5622F0C8BF0DA4CF11F50EC322428CBC01B52F9AC1589D2B9"
    },
    "377": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "378": {
      "op": "ADD"
    },
    "379": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "381": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "382": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "DUP1",
      "path": "0"
    },
    "383": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "384": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "SUB",
      "path": "0"
    },
    "385": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "386": {
      "fn": "Safevictim.withdraw",
      "offset": [
        890,
        920
      ],
      "op": "LOG1",
      "path": "0"
    },
    "387": {
      "fn": "Safevictim.withdraw",
      "offset": [
        647,
        927
      ],
      "op": "POP",
      "path": "0"
    },
    "388": {
      "fn": "Safevictim.withdraw",
      "offset": [
        647,
        927
      ],
      "op": "POP",
      "path": "0"
    },
    "389": {
      "fn": "Safevictim.withdraw",
      "jump": "o",
      "offset": [
        618,
        927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "390": {
      "fn": "Safevictim.deposit",
      "offset": [
        444,
        612
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "391": {
      "fn": "Safevictim.deposit",
      "offset": [
        510,
        511
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "393": {
      "fn": "Safevictim.deposit",
      "offset": [
        498,
        507
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "394": {
      "branch": 8,
      "fn": "Safevictim.deposit",
      "offset": [
        498,
        511
      ],
      "op": "GT",
      "path": "0"
    },
    "395": {
      "fn": "Safevictim.deposit",
      "offset": [
        490,
        512
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x193"
    },
    "398": {
      "branch": 8,
      "fn": "Safevictim.deposit",
      "offset": [
        490,
        512
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "399": {
      "fn": "Safevictim.deposit",
      "offset": [
        490,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "401": {
      "fn": "Safevictim.deposit",
      "offset": [
        490,
        512
      ],
      "op": "DUP1",
      "path": "0"
    },
    "402": {
      "fn": "Safevictim.deposit",
      "offset": [
        490,
        512
      ],
      "op": "REVERT",
      "path": "0"
    },
    "403": {
      "fn": "Safevictim.deposit",
      "offset": [
        490,
        512
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "404": {
      "fn": "Safevictim.deposit",
      "offset": [
        534,
        544
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "405": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "407": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "408": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "DUP2",
      "path": "0"
    },
    "409": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "410": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "412": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "414": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "415": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "417": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "DUP2",
      "path": "0"
    },
    "418": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "419": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "DUP1",
      "path": "0"
    },
    "420": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "421": {
      "fn": "Safevictim.deposit",
      "offset": [
        549,
        558
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "422": {
      "fn": "Safevictim.deposit",
      "offset": [
        549,
        558
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "423": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "427": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "428": {
      "fn": "Safevictim.deposit",
      "offset": [
        549,
        558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "429": {
      "fn": "Safevictim.deposit",
      "offset": [
        549,
        558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "430": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x221"
    },
    "433": {
      "fn": "Safevictim.deposit",
      "jump": "i",
      "offset": [
        522,
        558
      ],
      "op": "JUMP",
      "path": "0"
    },
    "434": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "436": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "437": {
      "fn": "Safevictim.deposit",
      "offset": [
        522,
        558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "op": "POP"
    },
    "440": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x40"
    },
    "442": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "443": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "444": {
      "fn": "Safevictim.deposit",
      "offset": [
        583,
        593
      ],
      "op": "CALLER",
      "path": "0"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "fn": "Safevictim.deposit",
      "offset": [
        595,
        604
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "450": {
      "op": "DUP3"
    },
    "451": {
      "op": "ADD"
    },
    "452": {
      "op": "MSTORE"
    },
    "453": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x688E89C1496876B0D792DF75671FBE827183660B170BB8983D82511A6A4B7D1B"
    },
    "486": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "487": {
      "op": "ADD"
    },
    "488": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "490": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "491": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "493": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "SUB",
      "path": "0"
    },
    "494": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "Safevictim.deposit",
      "offset": [
        573,
        605
      ],
      "op": "LOG1",
      "path": "0"
    },
    "496": {
      "fn": "Safevictim.deposit",
      "jump": "o",
      "offset": [
        444,
        612
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "op": "JUMPDEST"
    },
    "498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "502": {
      "op": "DUP3"
    },
    "503": {
      "op": "DUP5"
    },
    "504": {
      "op": "SUB"
    },
    "505": {
      "op": "SLT"
    },
    "506": {
      "op": "ISZERO"
    },
    "507": {
      "op": "PUSH2",
      "value": "0x203"
    },
    "510": {
      "op": "JUMPI"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "513": {
      "op": "DUP1"
    },
    "514": {
      "op": "REVERT"
    },
    "515": {
      "op": "JUMPDEST"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "CALLDATALOAD"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "524": {
      "op": "SHL"
    },
    "525": {
      "op": "SUB"
    },
    "526": {
      "op": "DUP2"
    },
    "527": {
      "op": "AND"
    },
    "528": {
      "op": "DUP2"
    },
    "529": {
      "op": "EQ"
    },
    "530": {
      "op": "PUSH2",
      "value": "0x21A"
    },
    "533": {
      "op": "JUMPI"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "536": {
      "op": "DUP1"
    },
    "537": {
      "op": "REVERT"
    },
    "538": {
      "op": "JUMPDEST"
    },
    "539": {
      "op": "SWAP4"
    },
    "540": {
      "op": "SWAP3"
    },
    "541": {
      "op": "POP"
    },
    "542": {
      "op": "POP"
    },
    "543": {
      "op": "POP"
    },
    "544": {
      "jump": "o",
      "op": "JUMP"
    },
    "545": {
      "op": "JUMPDEST"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "548": {
      "op": "DUP3"
    },
    "549": {
      "op": "NOT"
    },
    "550": {
      "op": "DUP3"
    },
    "551": {
      "op": "GT"
    },
    "552": {
      "op": "ISZERO"
    },
    "553": {
      "op": "PUSH2",
      "value": "0x242"
    },
    "556": {
      "op": "JUMPI"
    },
    "557": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "564": {
      "op": "SHL"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "572": {
      "op": "MSTORE"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "577": {
      "op": "REVERT"
    },
    "578": {
      "op": "JUMPDEST"
    },
    "579": {
      "op": "POP"
    },
    "580": {
      "op": "ADD"
    },
    "581": {
      "op": "SWAP1"
    },
    "582": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "482763461ee9118d8e75902d525b35a4f4cbc17f",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Safevictim {\n    event deposited(address _user, uint256 _amount);\n    event withdrawed(address _user, uint256 _amount);\n\n    bool internal reentrancyGuard;\n    mapping(address => uint256) public userBalance;\n\n    modifier noReentrancy() {\n        require(!reentrancyGuard, \"No re-entrancy\");\n        reentrancyGuard = true;\n        _;\n        reentrancyGuard = false;\n    }\n\n    function deposit() external payable {\n        require(msg.value > 0);\n        userBalance[msg.sender] += msg.value;\n        emit deposited(msg.sender, msg.value);\n    }\n\n    function withdraw() external {\n        require(userBalance[msg.sender] > 0);\n        uint256 amount = userBalance[msg.sender];\n        userBalance[msg.sender] = 0;\n\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\n        require(sent, \"Failed.\");\n        emit withdrawed(msg.sender, amount);\n    }\n}\n",
  "sourceMap": "56:873:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Safe.sol",
  "type": "contract"
}