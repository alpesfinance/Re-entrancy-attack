{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/victim.sol"
  },
  "ast": {
    "absolutePath": "contracts/victim.sol",
    "exportedSymbols": {
      "victim": [
        205
      ]
    },
    "id": 206,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 114,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "victim",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 205,
        "linearizedBaseContracts": [
          205
        ],
        "name": "victim",
        "nameLocation": "65:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 120,
            "name": "deposited",
            "nameLocation": "84:9:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "102:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "94:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "94:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "117:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "109:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "109:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "93:32:1"
            },
            "src": "78:48:1"
          },
          {
            "anonymous": false,
            "id": 126,
            "name": "withdrawed",
            "nameLocation": "137:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "156:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "148:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "148:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "171:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "163:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "147:32:1"
            },
            "src": "131:49:1"
          },
          {
            "constant": false,
            "functionSelector": "0103c92b",
            "id": 130,
            "mutability": "mutable",
            "name": "userBalance",
            "nameLocation": "221:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 205,
            "src": "186:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 129,
              "keyType": {
                "id": 127,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "194:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "186:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 128,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "205:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "275:132:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "293:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "293:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "305:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "293:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "285:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "285:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "285:22:1"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 140,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "317:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 143,
                      "indexExpression": {
                        "expression": {
                          "id": 141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "329:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "329:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "317:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "344:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "344:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "317:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "317:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 149,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "378:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "378:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "390:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "390:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 148,
                      "name": "deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "368:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "368:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "EmitStatement",
                  "src": "363:37:1"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "248:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "255:2:1"
            },
            "returnParameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:1"
            },
            "scope": 205,
            "src": "239:168:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "442:280:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 160,
                            "name": "userBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "460:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 163,
                          "indexExpression": {
                            "expression": {
                              "id": 161,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "472:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "472:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "460:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "486:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "460:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "452:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "452:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "452:36:1"
                },
                {
                  "assignments": [
                    169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "506:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "498:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "498:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 174,
                  "initialValue": {
                    "baseExpression": {
                      "id": 170,
                      "name": "userBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "515:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 173,
                    "indexExpression": {
                      "expression": {
                        "id": 171,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "527:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "527:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "515:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "498:40:1"
                },
                {
                  "assignments": [
                    176,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "554:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "549:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "549:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 184,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "595:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "564:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "564:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "564:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 180,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "587:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "564:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "548:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 186,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "616:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c65642e",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "622:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2350d055b7387361ef85d5ee24239eccd0e54f467458852b2350866f996b89bf",
                          "typeString": "literal_string \"Failed.\""
                        },
                        "value": "Failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2350d055b7387361ef85d5ee24239eccd0e54f467458852b2350866f996b89bf",
                          "typeString": "literal_string \"Failed.\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "608:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "608:24:1"
                },
                {
                  "expression": {
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 190,
                        "name": "userBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "643:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 193,
                      "indexExpression": {
                        "expression": {
                          "id": 191,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "655:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "655:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "643:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "669:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "643:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "643:27:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 198,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "696:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "696:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "708:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 197,
                      "name": "withdrawed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "685:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "685:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "EmitStatement",
                  "src": "680:35:1"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "422:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "430:2:1"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:1"
            },
            "scope": 205,
            "src": "413:309:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 206,
        "src": "56:668:1",
        "usedErrors": []
      }
    ],
    "src": "31:694:1"
  },
  "bytecode": "608060405234801561001057600080fd5b50610288806100206000396000f3fe6080604052600436106100345760003560e01c80630103c92b146100395780633ccfd60b14610078578063d0e30db01461008f575b600080fd5b34801561004557600080fd5b506100666100543660046101fc565b60006020819052908152604090205481565b60405190815260200160405180910390f35b34801561008457600080fd5b5061008d610097565b005b61008d610191565b336000908152602081905260409020546100b057600080fd5b3360008181526020819052604080822054905190929083908381818185875af1925050503d8060008114610100576040519150601f19603f3d011682016040523d82523d6000602084013e610105565b606091505b50509050806101445760405162461bcd60e51b81526020600482015260076024820152662330b4b632b21760c91b604482015260640160405180910390fd5b3360008181526020818152604080832092909255815192835282018490527f93617e8c39b86ab5622f0c8bf0da4cf11f50ec322428cbc01b52f9ac1589d2b9910160405180910390a15050565b6000341161019e57600080fd5b33600090815260208190526040812080543492906101bd90849061022c565b9091555050604080513381523460208201527f688e89c1496876b0d792df75671fbe827183660b170bb8983d82511a6a4b7d1b910160405180910390a1565b60006020828403121561020e57600080fd5b81356001600160a01b038116811461022557600080fd5b9392505050565b6000821982111561024d57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220957a7949eb0792d3fdd1bf428f3b5f8e0b78f338b32009a7dbb25b8f42f3314a64736f6c634300080a0033",
  "bytecodeSha1": "5fcf71e54fa37f9364e6a5a864103824a66fc7ec",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "victim",
  "coverageMap": {
    "branches": {
      "1": {
        "victim.deposit": {
          "8": [
            293,
            306,
            true
          ]
        },
        "victim.withdraw": {
          "7": [
            616,
            620,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "victim.deposit": {
          "4": [
            285,
            307
          ],
          "5": [
            317,
            353
          ],
          "6": [
            363,
            400
          ]
        },
        "victim.withdraw": {
          "0": [
            452,
            488
          ],
          "1": [
            608,
            632
          ],
          "2": [
            643,
            670
          ],
          "3": [
            680,
            715
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100345760003560e01c80630103c92b146100395780633ccfd60b14610078578063d0e30db01461008f575b600080fd5b34801561004557600080fd5b506100666100543660046101fc565b60006020819052908152604090205481565b60405190815260200160405180910390f35b34801561008457600080fd5b5061008d610097565b005b61008d610191565b336000908152602081905260409020546100b057600080fd5b3360008181526020819052604080822054905190929083908381818185875af1925050503d8060008114610100576040519150601f19603f3d011682016040523d82523d6000602084013e610105565b606091505b50509050806101445760405162461bcd60e51b81526020600482015260076024820152662330b4b632b21760c91b604482015260640160405180910390fd5b3360008181526020818152604080832092909255815192835282018490527f93617e8c39b86ab5622f0c8bf0da4cf11f50ec322428cbc01b52f9ac1589d2b9910160405180910390a15050565b6000341161019e57600080fd5b33600090815260208190526040812080543492906101bd90849061022c565b9091555050604080513381523460208201527f688e89c1496876b0d792df75671fbe827183660b170bb8983d82511a6a4b7d1b910160405180910390a1565b60006020828403121561020e57600080fd5b81356001600160a01b038116811461022557600080fd5b9392505050565b6000821982111561024d57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220957a7949eb0792d3fdd1bf428f3b5f8e0b78f338b32009a7dbb25b8f42f3314a64736f6c634300080a0033",
  "deployedSourceMap": "56:668:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;186:46;;;;;;;;;;-1:-1:-1;186:46:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;451:25:2;;;439:2;424:18;186:46:1;;;;;;;413:309;;;;;;;;;;;;;:::i;:::-;;239:168;;;:::i;413:309::-;472:10;486:1;460:23;;;;;;;;;;;452:36;;;;;;527:10;498:14;515:23;;;;;;;;;;;;564:34;;515:23;;527:10;515:23;;498:14;564:34;498:14;564:34;515:23;527:10;564:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:50;;;616:4;608:24;;;;-1:-1:-1;;;608:24:1;;899:2:2;608:24:1;;;881:21:2;938:1;918:18;;;911:29;-1:-1:-1;;;956:18:2;;;949:37;1003:18;;608:24:1;;;;;;;;655:10;669:1;643:23;;;;;;;;;;;:27;;;;685:30;;1206:51:2;;;1273:18;;1266:34;;;685:30:1;;1179:18:2;685:30:1;;;;;;;442:280;;413:309::o;239:168::-;305:1;293:9;:13;285:22;;;;;;329:10;317:11;:23;;;;;;;;;;:36;;344:9;;317:11;:36;;344:9;;317:36;:::i;:::-;;;;-1:-1:-1;;368:32:1;;;378:10;1206:51:2;;390:9:1;1288:2:2;1273:18;;1266:34;368:32:1;;1179:18:2;368:32:1;;;;;;;239:168::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;1311:225::-;1351:3;1382:1;1378:6;1375:1;1372:13;1369:136;;;1427:10;1422:3;1418:20;1415:1;1408:31;1462:4;1459:1;1452:15;1490:4;1487:1;1480:15;1369:136;-1:-1:-1;1521:9:2;;1311:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    56,
    724
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x103C92B EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8D PUSH2 0x97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8D PUSH2 0x191 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 SWAP3 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x100 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x105 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x144 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x2330B4B632B217 PUSH1 0xC9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x93617E8C39B86AB5622F0C8BF0DA4CF11F50EC322428CBC01B52F9AC1589D2B9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1BD SWAP1 DUP5 SWAP1 PUSH2 0x22C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x688E89C1496876B0D792DF75671FBE827183660B170BB8983D82511A6A4B7D1B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x24D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PUSH27 0x7949EB0792D3FDD1BF428F3B5F8E0B78F338B32009A7DBB25B8F42 RETURN BALANCE 0x4A PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        56,
        724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x103C92B"
    },
    "25": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "EQ",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3CCFD60B"
    },
    "36": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78"
    },
    "40": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD0E30DB0"
    },
    "47": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F"
    },
    "51": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        56,
        724
      ],
      "op": "REVERT",
      "path": "1"
    },
    "57": {
      "offset": [
        186,
        232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "58": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "60": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45"
    },
    "64": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "67": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "68": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "REVERT",
      "path": "1"
    },
    "69": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "offset": [
        186,
        232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "74": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x54"
    },
    "77": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "78": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "80": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC"
    },
    "83": {
      "fn": null,
      "jump": "i",
      "offset": [
        186,
        232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "84": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "89": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "95": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "97": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "100": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "DUP2",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "JUMP",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "105": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "106": {
      "op": "SWAP1"
    },
    "107": {
      "op": "DUP2"
    },
    "108": {
      "op": "MSTORE"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "offset": [
        186,
        232
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "114": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "DUP1",
      "path": "1"
    },
    "116": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "117": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SUB",
      "path": "1"
    },
    "118": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        186,
        232
      ],
      "op": "RETURN",
      "path": "1"
    },
    "120": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "121": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "122": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "DUP1",
      "path": "1"
    },
    "123": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "124": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x84"
    },
    "127": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "128": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "130": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "DUP1",
      "path": "1"
    },
    "131": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "REVERT",
      "path": "1"
    },
    "132": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "133": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "POP",
      "path": "1"
    },
    "134": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "137": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "140": {
      "fn": "victim.withdraw",
      "jump": "i",
      "offset": [
        413,
        722
      ],
      "op": "JUMP",
      "path": "1"
    },
    "141": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "142": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "STOP",
      "path": "1"
    },
    "143": {
      "fn": "victim.deposit",
      "offset": [
        239,
        407
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "144": {
      "fn": "victim.deposit",
      "offset": [
        239,
        407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "147": {
      "fn": "victim.deposit",
      "offset": [
        239,
        407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x191"
    },
    "150": {
      "fn": "victim.deposit",
      "jump": "i",
      "offset": [
        239,
        407
      ],
      "op": "JUMP",
      "path": "1"
    },
    "151": {
      "fn": "victim.withdraw",
      "offset": [
        413,
        722
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": "victim.withdraw",
      "offset": [
        472,
        482
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 0
    },
    "153": {
      "fn": "victim.withdraw",
      "offset": [
        486,
        487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "155": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "156": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "DUP2",
      "path": "1"
    },
    "157": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "158": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "160": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "DUP2",
      "path": "1"
    },
    "161": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "162": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "163": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "165": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "166": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "167": {
      "fn": "victim.withdraw",
      "offset": [
        460,
        483
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "168": {
      "fn": "victim.withdraw",
      "offset": [
        452,
        488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB0"
    },
    "171": {
      "fn": "victim.withdraw",
      "offset": [
        452,
        488
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "172": {
      "fn": "victim.withdraw",
      "offset": [
        452,
        488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "174": {
      "fn": "victim.withdraw",
      "offset": [
        452,
        488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": "victim.withdraw",
      "offset": [
        452,
        488
      ],
      "op": "REVERT",
      "path": "1"
    },
    "176": {
      "fn": "victim.withdraw",
      "offset": [
        452,
        488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "177": {
      "fn": "victim.withdraw",
      "offset": [
        527,
        537
      ],
      "op": "CALLER",
      "path": "1"
    },
    "178": {
      "fn": "victim.withdraw",
      "offset": [
        498,
        512
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "180": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "181": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "182": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "183": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "185": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "186": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "187": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "188": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "190": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "191": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP3",
      "path": "1"
    },
    "192": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "193": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "194": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "195": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "196": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "197": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "198": {
      "fn": "victim.withdraw",
      "offset": [
        527,
        537
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "199": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP4",
      "path": "1"
    },
    "200": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "201": {
      "fn": "victim.withdraw",
      "offset": [
        498,
        512
      ],
      "op": "DUP4",
      "path": "1"
    },
    "202": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "203": {
      "fn": "victim.withdraw",
      "offset": [
        498,
        512
      ],
      "op": "DUP2",
      "path": "1"
    },
    "204": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "205": {
      "fn": "victim.withdraw",
      "offset": [
        515,
        538
      ],
      "op": "DUP6",
      "path": "1"
    },
    "206": {
      "fn": "victim.withdraw",
      "offset": [
        527,
        537
      ],
      "op": "DUP8",
      "path": "1"
    },
    "207": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "GAS",
      "path": "1"
    },
    "208": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "CALL",
      "path": "1"
    },
    "209": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "210": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "211": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "212": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "213": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "214": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "215": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "217": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "218": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "EQ",
      "path": "1"
    },
    "219": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "222": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "223": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "225": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "226": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "227": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "228": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "230": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "NOT",
      "path": "1"
    },
    "231": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "233": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "234": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "ADD",
      "path": "1"
    },
    "235": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "AND",
      "path": "1"
    },
    "236": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP3",
      "path": "1"
    },
    "237": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "ADD",
      "path": "1"
    },
    "238": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "240": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "241": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "242": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP3",
      "path": "1"
    },
    "243": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "244": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "245": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "247": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "249": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "DUP5",
      "path": "1"
    },
    "250": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "ADD",
      "path": "1"
    },
    "251": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "252": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "255": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "JUMP",
      "path": "1"
    },
    "256": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "259": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "260": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "261": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "262": {
      "fn": "victim.withdraw",
      "offset": [
        564,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "263": {
      "fn": "victim.withdraw",
      "offset": [
        548,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "264": {
      "fn": "victim.withdraw",
      "offset": [
        548,
        598
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "265": {
      "fn": "victim.withdraw",
      "offset": [
        548,
        598
      ],
      "op": "POP",
      "path": "1"
    },
    "266": {
      "branch": 7,
      "fn": "victim.withdraw",
      "offset": [
        616,
        620
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 1
    },
    "267": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144"
    },
    "270": {
      "branch": 7,
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "271": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "273": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "274": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "278": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "280": {
      "op": "SHL"
    },
    "281": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "DUP2",
      "path": "1"
    },
    "282": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "285": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "287": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "288": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "ADD",
      "path": "1"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "294": {
      "op": "DUP3"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "op": "MSTORE"
    },
    "297": {
      "op": "PUSH7",
      "value": "0x2330B4B632B217"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "310": {
      "op": "DUP3"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "op": "MSTORE"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "315": {
      "op": "ADD"
    },
    "316": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "318": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "319": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "DUP1",
      "path": "1"
    },
    "320": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "321": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "SUB",
      "path": "1"
    },
    "322": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "323": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "324": {
      "fn": "victim.withdraw",
      "offset": [
        608,
        632
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "325": {
      "fn": "victim.withdraw",
      "offset": [
        655,
        665
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "326": {
      "fn": "victim.withdraw",
      "offset": [
        669,
        670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "328": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "329": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "330": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "331": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "333": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "334": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "DUP2",
      "path": "1"
    },
    "335": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "336": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "338": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "DUP1",
      "path": "1"
    },
    "339": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "DUP4",
      "path": "1"
    },
    "340": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        666
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "341": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        670
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "342": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        670
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "343": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        670
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "344": {
      "fn": "victim.withdraw",
      "offset": [
        643,
        670
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "345": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 3
    },
    "346": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "347": {
      "op": "SWAP3"
    },
    "348": {
      "op": "DUP4"
    },
    "349": {
      "op": "MSTORE"
    },
    "350": {
      "op": "DUP3"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "DUP5"
    },
    "353": {
      "op": "SWAP1"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x93617E8C39B86AB5622F0C8BF0DA4CF11F50EC322428CBC01B52F9AC1589D2B9"
    },
    "388": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "389": {
      "op": "ADD"
    },
    "390": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "392": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "393": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "DUP1",
      "path": "1"
    },
    "394": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "395": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "SUB",
      "path": "1"
    },
    "396": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "397": {
      "fn": "victim.withdraw",
      "offset": [
        685,
        715
      ],
      "op": "LOG1",
      "path": "1"
    },
    "398": {
      "fn": "victim.withdraw",
      "offset": [
        442,
        722
      ],
      "op": "POP",
      "path": "1"
    },
    "399": {
      "fn": "victim.withdraw",
      "offset": [
        442,
        722
      ],
      "op": "POP",
      "path": "1"
    },
    "400": {
      "fn": "victim.withdraw",
      "jump": "o",
      "offset": [
        413,
        722
      ],
      "op": "JUMP",
      "path": "1"
    },
    "401": {
      "fn": "victim.deposit",
      "offset": [
        239,
        407
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "402": {
      "fn": "victim.deposit",
      "offset": [
        305,
        306
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "404": {
      "fn": "victim.deposit",
      "offset": [
        293,
        302
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "405": {
      "branch": 8,
      "fn": "victim.deposit",
      "offset": [
        293,
        306
      ],
      "op": "GT",
      "path": "1"
    },
    "406": {
      "fn": "victim.deposit",
      "offset": [
        285,
        307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19E"
    },
    "409": {
      "branch": 8,
      "fn": "victim.deposit",
      "offset": [
        285,
        307
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "410": {
      "fn": "victim.deposit",
      "offset": [
        285,
        307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "412": {
      "fn": "victim.deposit",
      "offset": [
        285,
        307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "413": {
      "fn": "victim.deposit",
      "offset": [
        285,
        307
      ],
      "op": "REVERT",
      "path": "1"
    },
    "414": {
      "fn": "victim.deposit",
      "offset": [
        285,
        307
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "415": {
      "fn": "victim.deposit",
      "offset": [
        329,
        339
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 5
    },
    "416": {
      "fn": "victim.deposit",
      "offset": [
        317,
        328
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "418": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "419": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "420": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "421": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "423": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "424": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "425": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "426": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "428": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "DUP2",
      "path": "1"
    },
    "429": {
      "fn": "victim.deposit",
      "offset": [
        317,
        340
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "430": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "DUP1",
      "path": "1"
    },
    "431": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "432": {
      "fn": "victim.deposit",
      "offset": [
        344,
        353
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "433": {
      "fn": "victim.deposit",
      "offset": [
        344,
        353
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "434": {
      "fn": "victim.deposit",
      "offset": [
        317,
        328
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "435": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BD"
    },
    "438": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "439": {
      "fn": "victim.deposit",
      "offset": [
        344,
        353
      ],
      "op": "DUP5",
      "path": "1"
    },
    "440": {
      "fn": "victim.deposit",
      "offset": [
        344,
        353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "441": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22C"
    },
    "444": {
      "fn": "victim.deposit",
      "jump": "i",
      "offset": [
        317,
        353
      ],
      "op": "JUMP",
      "path": "1"
    },
    "445": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "446": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "447": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "448": {
      "fn": "victim.deposit",
      "offset": [
        317,
        353
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x40"
    },
    "453": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "DUP1",
      "path": "1"
    },
    "454": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "455": {
      "fn": "victim.deposit",
      "offset": [
        378,
        388
      ],
      "op": "CALLER",
      "path": "1"
    },
    "456": {
      "op": "DUP2"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "fn": "victim.deposit",
      "offset": [
        390,
        399
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "461": {
      "op": "DUP3"
    },
    "462": {
      "op": "ADD"
    },
    "463": {
      "op": "MSTORE"
    },
    "464": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x688E89C1496876B0D792DF75671FBE827183660B170BB8983D82511A6A4B7D1B"
    },
    "497": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "498": {
      "op": "ADD"
    },
    "499": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "501": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "502": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "DUP1",
      "path": "1"
    },
    "503": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "504": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "SUB",
      "path": "1"
    },
    "505": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "506": {
      "fn": "victim.deposit",
      "offset": [
        368,
        400
      ],
      "op": "LOG1",
      "path": "1"
    },
    "507": {
      "fn": "victim.deposit",
      "jump": "o",
      "offset": [
        239,
        407
      ],
      "op": "JUMP",
      "path": "1"
    },
    "508": {
      "op": "JUMPDEST"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "DUP5"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "op": "SLT"
    },
    "517": {
      "op": "ISZERO"
    },
    "518": {
      "op": "PUSH2",
      "value": "0x20E"
    },
    "521": {
      "op": "JUMPI"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "524": {
      "op": "DUP1"
    },
    "525": {
      "op": "REVERT"
    },
    "526": {
      "op": "JUMPDEST"
    },
    "527": {
      "op": "DUP2"
    },
    "528": {
      "op": "CALLDATALOAD"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "op": "DUP2"
    },
    "538": {
      "op": "AND"
    },
    "539": {
      "op": "DUP2"
    },
    "540": {
      "op": "EQ"
    },
    "541": {
      "op": "PUSH2",
      "value": "0x225"
    },
    "544": {
      "op": "JUMPI"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "547": {
      "op": "DUP1"
    },
    "548": {
      "op": "REVERT"
    },
    "549": {
      "op": "JUMPDEST"
    },
    "550": {
      "op": "SWAP4"
    },
    "551": {
      "op": "SWAP3"
    },
    "552": {
      "op": "POP"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "op": "POP"
    },
    "555": {
      "jump": "o",
      "op": "JUMP"
    },
    "556": {
      "op": "JUMPDEST"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "559": {
      "op": "DUP3"
    },
    "560": {
      "op": "NOT"
    },
    "561": {
      "op": "DUP3"
    },
    "562": {
      "op": "GT"
    },
    "563": {
      "op": "ISZERO"
    },
    "564": {
      "op": "PUSH2",
      "value": "0x24D"
    },
    "567": {
      "op": "JUMPI"
    },
    "568": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "573": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "575": {
      "op": "SHL"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "588": {
      "op": "REVERT"
    },
    "589": {
      "op": "JUMPDEST"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "ADD"
    },
    "592": {
      "op": "SWAP1"
    },
    "593": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "77794fb1896664c79bd53fdb869ee795511dc846",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract victim {\n    event deposited(address _user, uint256 _amount);\n    event withdrawed(address _user, uint256 _amount);\n\n    mapping(address => uint256) public userBalance;\n\n    function deposit() external payable {\n        require(msg.value > 0);\n        userBalance[msg.sender] += msg.value;\n        emit deposited(msg.sender, msg.value);\n    }\n\n    function withdraw() external {\n        require(userBalance[msg.sender] > 0);\n        uint256 amount = userBalance[msg.sender];\n        (bool sent, ) = msg.sender.call{value: amount}(\"\");\n        require(sent, \"Failed.\");\n\n        userBalance[msg.sender] = 0;\n        emit withdrawed(msg.sender, amount);\n    }\n}\n",
  "sourceMap": "56:668:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/victim.sol",
  "type": "contract"
}